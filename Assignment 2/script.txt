Script started on 2018-10-11 11:16:14-06:00
]0;patrick.quan@csa2:~/Documents/CPSC 355/Assignment 2patrick.quan@csa2:~/Documents/CPSC 355/Assignment 2$ gdb a2a
GNU gdb (GDB) Fedora 8.1.1-3.fc28
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a2a...done.
(gdb) display/i $pc
1: x/i $pc
<error: No registers.>
(gdb) b 1 [K
Breakpoint 1 at 0x400618: file a2a.s, line 1.
(gdb) r
Starting program: /home/ugc/patrick.quan/Documents/CPSC 355/Assignment 2/a2a 
warning: the debug information found in "/usr/lib/debug//usr/lib64/ld-2.27.so.debug" does not match "/lib/ld-linux-aarch64.so.1" (CRC mismatch).

Missing separate debuginfos, use: dnf debuginfo-install glibc-2.27-32.fc28.aarch64
warning: the debug information found in "/usr/lib/debug//lib64/libc-2.27.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).

warning: the debug information found in "/usr/lib/debug//usr/lib64/libc-2.27.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).


Breakpoint 1, main () at a2a.s:30
30	            mov         x29, sp //Updating the FP register to the current SP
1: x/i $pc
=> 0x400618 <main+4>:	mov	x29, sp
(gdb) ni
32	            mov         w24, 0
1: x/i $pc
=> 0x40061c <main+8>:	mov	w24, #0x0                   	// #0
(gdb) ni
33	            mov         w25, 1
1: x/i $pc
=> 0x400620 <main+12>:	mov	w25, #0x1                   	// #1
(gdb) ni
34	            mov         w20, -16843010 //Storing -16843010 into the w20 variable
1: x/i $pc
=> 0x400624 <main+16>:	mov	w20, #0xfefefefe            	// #-16843010
(gdb) ni
35	            mov         w19, 70 //Storing 70 into the w19 variable
1: x/i $pc
=> 0x400628 <main+20>:	mov	w19, #0x46                  	// #70
(gdb) ni
36	            mov         w21, 0 //Storing 0 into the w21 variable
1: x/i $pc
=> 0x40062c <main+24>:	mov	w21, #0x0                   	// #0
(gdb) ni
38	            adrp        x0, printOne //Adding the first print template to register x0
1: x/i $pc
=> 0x400630 <main+28>:	adrp	x0, 0x400000
(gdb) ni
39	            add         x0, x0, :lo12:printOne //Adding the first print template to the first 12 bits
1: x/i $pc
=> 0x400634 <main+32>:	add	x0, x0, #0x594
(gdb) ni
40	            mov         w1, w19 //Moving the contents of the w19 regsiter to w1 to be printed
1: x/i $pc
=> 0x400638 <main+36>:	mov	w1, w19
(gdb) ni
41	            mov         w2, w19 //Moving the contents of the w19 register to w2 to be printed
1: x/i $pc
=> 0x40063c <main+40>:	mov	w2, w19
(gdb) ni
42	            mov         w3, w20 //Moving the contents of the w20 register to w3 to be printed
1: x/i $pc
=> 0x400640 <main+44>:	mov	w3, w20
(gdb) ni
43	            mov         w4, w20 //Moving the contents of the w20 register to w4 to be printed
1: x/i $pc
=> 0x400644 <main+48>:	mov	w4, w20
(gdb) ni
44	            bl          printf //Printing stringOne and all of the appropriate data
1: x/i $pc
=> 0x400648 <main+52>:	bl	0x400480 <printf@plt>
(gdb) ni
Multiplier = 0x00000046 (70) Multiplicand = 0xfefefefe (-16843010) 

46	            cmp         w19, 0 //Comparing the w19 to 0, to determine if it is w23
1: x/i $pc
=> 0x40064c <main+56>:	cmp	w19, #0x0
(gdb) ni
47	            b.lt        negativeTrue //Branch called if the w19 is less than 0
1: x/i $pc
=> 0x400650 <main+60>:	b.lt	0x400660 <negativeTrue>  // b.tstop
(gdb) ni
48	            mov         w23, w24 //If the w23 branch is not called, then the w19 is set to not w23
1: x/i $pc
=> 0x400654 <main+64>:	mov	w23, w24
(gdb) ni
50	            mov         w22, 0 //Moving 0 into the w22 (loop counter) register
1: x/i $pc
=> 0x400658 <main+68>:	mov	w22, #0x0                   	// #0
(gdb) ni
51	            b           test //unconditional branch to test for the for loop
1: x/i $pc
=> 0x40065c <main+72>:	b	0x4006a4 <test>
(gdb) ni
Product = 0xffffffff Multiplier = 0xb9b9b974 
64-bit Result = 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b9b9b974 (-1179010700) 
[Inferior 1 (process 4851) exited with code 0303]
(gdb) ni
The program is not being run.
(gdb) e[Kquti[K[Kit
]0;patrick.quan@csa2:~/Documents/CPSC 355/Assignment 2patrick.quan@csa2:~/Documents/CPSC 355/Assignment 2$ exit
exit

Script done on 2018-10-11 11:17:08-06:00
